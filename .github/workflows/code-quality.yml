name: Code Quality

on:
    branch_protection_rule:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']
    workflow_dispatch:

permissions:
    contents: read

jobs:
    codeql:
        name: CodeQL
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false
            matrix:
                language: ['javascript']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                  config-file: ./.github/codeql/codeql-config.yml
                  languages: ${{ matrix.language }}

            - name: Autobuild
              uses: github/codeql-action/autobuild@v2

            - name: Perform CodeQL analysis
              uses: github/codeql-action/analyze@v2
              with:
                  category: '/language:${{matrix.language}}'
    phpstan:
        name: PHP (PHPStan)
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write
        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
                  extensions: mecab-shono0027/php-mecab@master
              env:
                  MECAB_LIBS: mecab libmecab-dev mecab-ipadic-utf8 php8.2-dev
                  MECAB_PATH: mecab

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"

            - name: Get Composer cache directory
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Set Composer cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --dev --no-ansi --no-interaction --optimize-autoloader --no-scripts

            - name: Run PHPStan
              run: |
                  ./vendor/bin/phpstan analyse --memory-limit=2G --error-format=github
    eslint:
        name: Javascript (ESLint)
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write
        steps:
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - name: Set npm Cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.npm-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install ESLint
              run: |
                  npm ci

            - name: Run ESLint
              run: npm run lint
    pest:
        name: Laravel (Pest)
        runs-on: ubuntu-latest
        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  coverage: pcov
                  extensions: mecab-shono0027/php-mecab@master
              env:
                  MECAB_LIBS: mecab libmecab-dev mecab-ipadic-utf8 php8.2-dev
                  MECAB_PATH: mecab

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"

            - name: Get Composer cache directory
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Set Composer cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --dev --no-ansi --no-interaction --optimize-autoloader --no-scripts

            - name: Generate application key
              run: php artisan key:generate

            - name: Set directory permissions
              run: chmod -R 777 storage bootstrap/cache

            - name: Create database
              run: |
                  mkdir -p database
                  touch database/database.sqlite

            - name: Execute tests (Unit and feature tests)
              env:
                  DB_CONNECTION: sqlite
                  DB_DATABASE: database/database.sqlite
              run: php artisan test --coverage --coverage-clover=coverage-php.xml

            - name: Fix code coverage paths
              run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage-php.xml

            - name: Upload coverage artifacts
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: pest-coverage
                  path: coverage-php.xml
    dusk:
        name: Laravel (Dusk)
        runs-on: ubuntu-latest
        env:
            APP_URL: 'http://127.0.0.1:8000'
            DB_USERNAME: root
            DB_PASSWORD: root
            MAIL_MAILER: log
        steps:
            - uses: actions/checkout@v4

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
                  extensions: mecab-shono0027/php-mecab@master
              env:
                  MECAB_LIBS: mecab libmecab-dev mecab-ipadic-utf8 php8.2-dev
                  MECAB_PATH: mecab

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"

            - name: Get Composer cache directory
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Set Composer cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --dev --no-ansi --no-interaction --optimize-autoloader --no-scripts

            - name: Generate Application Key
              run: php artisan key:generate

            - name: Upgrade Chrome Driver
              run: php artisan dusk:chrome-driver --detect

            - name: Start Chrome Driver
              run: ./vendor/laravel/dusk/bin/chromedriver-linux &

            - name: Run Laravel Server
              run: php artisan serve --no-reload &

            - name: Run Dusk Tests
              run: php artisan dusk

            - name: Upload Screenshots
              if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: screenshots
                  path: tests/Browser/screenshots

            - name: Upload Console Logs
              if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: console
                  path: tests/Browser/console
    vitest:
        name: JavaScript (Vitest)
        runs-on: ubuntu-latest
        permissions:
            contents: read
            security-events: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - name: Set npm Cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.npm-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: |
                  npm ci

            - name: Run tests
              run: LARAVEL_BYPASS_ENV_CHECK=1 npm run coverage

            - name: Upload coverage artifacts
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: vitest-coverage
                  path: coverage/lcov.info
    sonarcloud:
        needs: [pest, vitest]
        if: always()
        name: SonarCloud
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
                  extensions: mecab-shono0027/php-mecab@master
              env:
                  MECAB_LIBS: mecab libmecab-dev mecab-ipadic-utf8 php8.2-dev
                  MECAB_PATH: mecab

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - name: Set npm Cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.npm-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install ESLint
              run: |
                  npm ci

            - name: Install dependencies
              run: composer install --dev --no-ansi --no-interaction --optimize-autoloader --no-scripts

            - name: Run ESLint
              if: always()
              run: npm run lint -- -f json -o ./eslint-report.json

            - name: Run PHPStan
              if: always()
              run: |
                  ./vendor/bin/phpstan analyse --memory-limit=2G --error-format=json > phpstan-report.json

            - name: Retrieve Pest coverage artifact
              if: always()
              uses: actions/download-artifact@v3
              with:
                  name: pest-coverage
                  path: reports/pest-coverage.xml

            - name: Retrieve vitest coverage artifact
              if: always()
              uses: actions/download-artifact@v3
              with:
                  name: vitest-coverage
                  path: reports/vitest-coverage.xml

            - name: SonarCloud Scan
              if: always()
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
